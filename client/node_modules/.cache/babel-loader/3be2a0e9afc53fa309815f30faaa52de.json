{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\menis\\\\Documents\\\\Programming\\\\Full-Stack\\\\React-and-Redux\\\\ms-forums\\\\client\\\\src\\\\components\\\\common\\\\form.jsx\";\nimport { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      errors: {}\n    };\n\n    this.validate = () => {\n      const options = {\n        abortEarly: false\n      };\n      const {\n        error\n      } = Joi.validate(this.state.data, this.schema, options);\n      if (!error) return null;\n      const errors = {};\n      error.details.forEach(detail => {\n        errors[detail.path[0]] = detail.message;\n      });\n      return errors;\n    };\n\n    this.validateProperty = ({\n      name,\n      value\n    }) => {\n      const obj = {\n        [name]: value\n      };\n      const schema = {\n        [name]: this.schema[name]\n      };\n      const {\n        error\n      } = Joi.validate(obj, schema);\n      return error ? error.details[0].message : null;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const errors = this.validate();\n      this.setState({\n        errors: errors || {}\n      });\n      if (errors) return;\n      this.doSubmit();\n    };\n\n    this.handleChange = ({\n      currentTarget: input\n    }) => {\n      const errors = { ...this.state.errors\n      };\n      const errorMesage = this.validateProperty(input);\n      if (errorMesage) errors[input.name] = errorMesage;else delete errors[input.name];\n      const data = { ...this.state.data\n      };\n      data[input.name] = input.value;\n      this.setState({\n        data,\n        errors\n      });\n    };\n\n    this.handleCheckBoxChange = ({\n      currentTarget: input\n    }) => {\n      var _data$input$name;\n\n      const data = { ...this.state.data\n      }; //check if the input.value in the array \n\n      let index = (_data$input$name = data[input.name]) === null || _data$input$name === void 0 ? void 0 : _data$input$name.findIndex(item => item === input.value);\n\n      if (index === -1) {\n        var _data$input$name2;\n\n        (_data$input$name2 = data[input.name]) === null || _data$input$name2 === void 0 ? void 0 : _data$input$name2.push(input.value);\n      } else {\n        var _data$input$name3;\n\n        (_data$input$name3 = data[input.name]) === null || _data$input$name3 === void 0 ? void 0 : _data$input$name3.splice(index, 1);\n      }\n\n      this.setState({\n        data\n      });\n    };\n  }\n\n  renderButton(label) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      disabled: this.validate(),\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderInput(name, label, type = \"text\", ...rest) {\n    const {\n      data,\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Input, {\n      type: type,\n      value: data[name],\n      name: name,\n      label: label,\n      error: errors[name],\n      onChange: this.handleChange,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderCheckBoxInput(specificCategory, ...rest) {\n    return /*#__PURE__*/_jsxDEV(Input, {\n      name: \"category\",\n      type: \"checkbox\",\n      label: `${specificCategory}`,\n      value: specificCategory.toLowerCase(),\n      className: \"col-2\",\n      onChange: this.handleCheckBoxChange,\n      ...rest\n    }, specificCategory, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/menis/Documents/Programming/Full-Stack/React-and-Redux/ms-forums/client/src/components/common/form.jsx"],"names":["Component","Joi","Input","Form","state","data","errors","validate","options","abortEarly","error","schema","details","forEach","detail","path","message","validateProperty","name","value","obj","handleSubmit","e","preventDefault","setState","doSubmit","handleChange","currentTarget","input","errorMesage","handleCheckBoxChange","index","findIndex","item","push","splice","renderButton","label","renderInput","type","rest","renderCheckBoxInput","specificCategory","toLowerCase"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    error.details.forEach((detail) => {\r\n      errors[detail.path[0]] = detail.message;\r\n    });\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button className=\"btn btn-primary\" disabled={this.validate()}>\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMesage = this.validateProperty(input);\r\n    if (errorMesage) errors[input.name] = errorMesage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderInput(name, label, type = \"text\", ...rest) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        value={data[name]}\r\n        name={name}\r\n        label={label}\r\n        error={errors[name]}\r\n        onChange={this.handleChange}\r\n        {...rest}\r\n      />\r\n    );\r\n  }\r\n  handleCheckBoxChange = ({ currentTarget: input }) => {\r\n    const data = { ...this.state.data };\r\n\r\n    //check if the input.value in the array \r\n    let index = data[input.name]?.findIndex(item => item === input.value)\r\n    if(index === -1) {\r\n      data[input.name]?.push(input.value);\r\n    }else{\r\n      data[input.name]?.splice(index, 1)\r\n    }\r\n    \r\n    this.setState({ data });\r\n  };\r\n\r\n  renderCheckBoxInput(specificCategory, ...rest) {\r\n    return (\r\n      <Input\r\n      name={\"category\"}\r\n        type=\"checkbox\"\r\n        label={`${specificCategory}`}\r\n        value= {specificCategory.toLowerCase()}\r\n        key={specificCategory}\r\n        className=\"col-2\"\r\n        onChange={this.handleCheckBoxChange}\r\n        {...rest}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}