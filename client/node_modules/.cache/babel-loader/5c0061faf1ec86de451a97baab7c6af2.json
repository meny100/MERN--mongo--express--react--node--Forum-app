{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport * as userService from \"./userService\";\naxios.defaults.headers.common[\"x-auth-token\"] = userService.getJwt();\nlet access = new Headers();\naccess.append('Access-Control-Allow-Origin', 'https://localhost:3000');\naccess.append('Access-Control-Allow-Credentials', 'true');\naxios.defaults.headers.common[\"access\"] = access;\naxios.interceptors.response.use(null, error => {\n  var _error$response;\n\n  const expectedError = !!((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status);\n  expectedError && toast.error(`error ${error.response.statusText} ${error.response.status}`);\n  return Promise.reject(error);\n});\nconst exportedObject = {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  patch: axios.patch,\n  delete: axios.delete\n};\nexport default exportedObject;","map":{"version":3,"sources":["C:/Users/menis/Documents/Programming/Full-Stack/React-and-Redux/ms-forums/client/src/services/httpService.js"],"names":["axios","toast","userService","defaults","headers","common","getJwt","access","Headers","append","interceptors","response","use","error","expectedError","status","statusText","Promise","reject","exportedObject","get","post","put","patch","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEAF,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,cAA9B,IAAgDH,WAAW,CAACI,MAAZ,EAAhD;AAEA,IAAIC,MAAM,GAAG,IAAIC,OAAJ,EAAb;AACAD,MAAM,CAACE,MAAP,CAAc,6BAAd,EAA6C,wBAA7C;AACAF,MAAM,CAACE,MAAP,CAAc,kCAAd,EAAkD,MAAlD;AACAT,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,QAA9B,IAA0CE,MAA1C;AAGAP,KAAK,CAACU,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,IAAhC,EAAsCC,KAAK,IAAI;AAAA;;AAC3C,QAAMC,aAAa,GAAG,CAAC,qBAACD,KAAK,CAACF,QAAP,oDAAC,gBAAgBI,MAAjB,CAAvB;AACAD,EAAAA,aAAa,IAAIb,KAAK,CAACY,KAAN,CAAa,SAAQA,KAAK,CAACF,QAAN,CAAeK,UAAW,IAAGH,KAAK,CAACF,QAAN,CAAeI,MAAO,EAAxE,CAAjB;AACA,SAAOE,OAAO,CAACC,MAAR,CAAeL,KAAf,CAAP;AACH,CAJD;AAMA,MAAMM,cAAc,GAAG;AACnBC,EAAAA,GAAG,EAAEpB,KAAK,CAACoB,GADQ;AAEnBC,EAAAA,IAAI,EAAErB,KAAK,CAACqB,IAFO;AAGnBC,EAAAA,GAAG,EAAEtB,KAAK,CAACsB,GAHQ;AAInBC,EAAAA,KAAK,EAAEvB,KAAK,CAACuB,KAJM;AAKnBC,EAAAA,MAAM,EAAExB,KAAK,CAACwB;AALK,CAAvB;AAOA,eAAeL,cAAf","sourcesContent":["import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as userService from \"./userService\";\r\n\r\naxios.defaults.headers.common[\"x-auth-token\"] = userService.getJwt();\r\n\r\nlet access = new Headers();\r\naccess.append('Access-Control-Allow-Origin', 'https://localhost:3000');\r\naccess.append('Access-Control-Allow-Credentials', 'true');\r\naxios.defaults.headers.common[\"access\"] = access;\r\n\r\n\r\naxios.interceptors.response.use(null, error => {\r\n    const expectedError = !!error.response?.status;\r\n    expectedError && toast.error(`error ${error.response.statusText} ${error.response.status}`);\r\n    return Promise.reject(error);\r\n})\r\n\r\nconst exportedObject = {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    patch: axios.patch,\r\n    delete: axios.delete,\r\n};\r\nexport default exportedObject;\r\n"]},"metadata":{},"sourceType":"module"}